{"version":3,"sources":["webpack:///./src/pages/training/Detail.tsx"],"names":["TrainingDetail","hasEnrolled","training","title","excerpt","description","duration","duration_type","price","start_date","this","checkRoute","id","checkEnrolled","diff","local","format","remainingDay","event","preventDefault","enroll","then","$route","params","getTraining","isEnrolled","data","$forceUpdate","deep","methods"],"mappings":"8RAgBqBA,EAArB,yG,0BAIY,EAAAC,aAAuB,EAEvB,EAAAC,SAAsB,CAC1BC,MAAO,GACPC,QAAS,GACTC,YAAa,GACbC,SAAU,GACVC,cAAe,GACfC,MAAO,GACPC,WAAY,IAbpB,qDAiBI,WACIC,KAAKC,eAlBb,6BAsBI,WACQD,KAAKR,SAASU,IACdF,KAAKG,kBAxBjB,qBA4BI,WACIH,KAAKC,eA7Bb,wBAgCI,WACI,OAAO,IAAOD,KAAKR,SAASO,YAAYK,KAAK,MAAU,UAjC/D,oBAoCI,WAAM,0BACF,2BAAiB,SAAjB,oBACmB,mCADnB,gBAEmB,gBAFnB,gBAGuB,6BAHvB,eAI0B,SAJ1B,CAImCJ,KAAKR,SAASC,QAJjD,eAK2B,UAL3B,eAM8B,SAN9B,kBAMiDO,KAAKR,SAASM,QAN/D,QAMkFE,KAAKR,SAASI,SAAUI,KAAKR,SAASK,gBANxH,gBAOgC,QAPhC,cAOkD,IAAOG,KAAKR,SAASO,YAAYM,QAAQC,OAAO,iCAPlG,eAS2B,eAT3B,oBAS6DN,KAAKR,SAASG,mBAT3E,kBAYsB,yBAZtB,CAaaK,KAAKT,YACA,KACAS,KAAKO,aAAe,EAChB,CAAC,EAAD,cACc,cADd,CAC4BP,KAAKO,aADjC,OACmDP,KAAKO,aAAe,EAAI,IAAM,GADjF,kDAEU,KAFV,MAEoB,2BAFpB,UAEwD,SAACC,GACnDA,EAAMC,iBACN,EAAKC,OAAO,EAAKlB,UACZmB,MAAK,WACF,EAAKR,sBANnB,iBADJ,eAWe,UAXf,8FApD1B,iFAyEI,+GACUD,EADV,UACeF,KAAKY,cADpB,iBACe,EAAaC,cAD5B,aACe,EAAqBX,GADpC,SAE0BF,KAAKc,YAAYZ,GAF3C,OAEIF,KAAKR,SAFT,uDAzEJ,6IA8EI,yHACUQ,KAAKe,WAAWf,KAAKR,UACtBmB,MAAK,SAACK,GAECA,IACA,EAAKzB,aAAc,EACnB,EAAK0B,mBANrB,gDA9EJ,8DAA4C,QAiBxC,gBADC,eAAM,SAAU,CAAEC,MAAM,K,2BAGxB,MAGD,gBADC,eAAM,a,8BAKN,MA1BgB5B,EAAc,gBATlC,eAAU,CACP6B,QAAS,kBACF,eAAW,CACVL,YAAa,uBACbJ,OAAQ,kBACRK,WAAY,4BAIHzB,GAAA","file":"js/chunk-2d0c8f9b.ee8f03c0.js","sourcesContent":["import { VNode } from 'vue'\r\nimport { Component, Vue, Watch } from 'vue-property-decorator'\r\nimport { mapActions } from 'vuex'\r\n\r\nimport { iTraining } from '@/interfaces/app'\r\nimport moment from 'moment'\r\n\r\n@Component({\r\n    methods: {\r\n        ...mapActions({\r\n            getTraining: 'training/getTraining',\r\n            enroll: 'training/enroll',\r\n            isEnrolled: 'training/isEnrolled',\r\n        })\r\n    }\r\n})\r\nexport default class TrainingDetail extends Vue {\r\n    private getTraining!: (id: string) => iTraining\r\n    private isEnrolled!: (training: iTraining) => Promise<boolean>\r\n    private enroll!: (training: iTraining) => Promise<boolean>\r\n    private hasEnrolled: boolean = false\r\n\r\n    private training: iTraining = {\r\n        title: '',\r\n        excerpt: '',\r\n        description: '',\r\n        duration: '',\r\n        duration_type: '',\r\n        price: '',\r\n        start_date: '',\r\n    }\r\n\r\n    @Watch('$route', { deep: true })\r\n    routeWatcher() {\r\n        this.checkRoute()\r\n    }\r\n\r\n    @Watch('training')\r\n    trainingUpdated() {\r\n        if (this.training.id) {\r\n            this.checkEnrolled()\r\n        }\r\n    }\r\n\r\n    mounted() {\r\n        this.checkRoute()\r\n    }\r\n\r\n    get remainingDay(): number {\r\n        return moment(this.training.start_date).diff(moment(), 'days')\r\n    }\r\n\r\n    render(): VNode {\r\n        return (<main id=\"main\">\r\n            <section class=\"item__section training__section\">\r\n                <div class=\"item__detail\">\r\n                    <div class=\"item__detail__description\">\r\n                        <h1 class=\"title\">{this.training.title}</h1>\r\n                        <div class=\"holder\">\r\n                            <em class=\"price\"><span>Rs. {this.training.price}</span> for {this.training.duration}{this.training.duration_type}</em>\r\n                            <span class=\"date\">Starts on {moment(this.training.start_date).local().format('Do [of] MMM, [at] hh:mm a')}</span>\r\n                        </div>\r\n                        <div class=\"text__holder\" domPropsInnerHTML={this.training.description} />\r\n                    </div>\r\n                </div>\r\n                <footer class=\"item__section__footer\">\r\n                    {this.hasEnrolled\r\n                        ? null\r\n                        : this.remainingDay > 0\r\n                            ? [\r\n                                <span class=\"day__count\">{this.remainingDay} day{this.remainingDay > 1 ? 's' : ''} left till Training starts</span>,\r\n                                <a href=\"#\" class=\"btn btn__success btn__xs\" onClick={(event: MouseEvent) => {\r\n                                    event.preventDefault()\r\n                                    this.enroll(this.training)\r\n                                        .then(() => {\r\n                                            this.checkEnrolled()\r\n                                        })\r\n                                }}>Enroll now</a>\r\n                            ]\r\n                            : <div class=\"notice\">\r\n                                <strong>This training is over</strong>\r\n                                <p>Please wait for new date release.</p>\r\n                            </div>\r\n                    }\r\n                </footer>\r\n            </section>\r\n        </main>)\r\n    }\r\n\r\n    async checkRoute() {\r\n        const id = this.$route?.params?.id as string\r\n        this.training = await this.getTraining(id)\r\n    }\r\n\r\n    async checkEnrolled() {\r\n        await this.isEnrolled(this.training)\r\n            .then((data) => {\r\n\r\n                if (data) {\r\n                    this.hasEnrolled = true\r\n                    this.$forceUpdate()\r\n                }\r\n            })\r\n    }\r\n}\r\n"],"sourceRoot":""}