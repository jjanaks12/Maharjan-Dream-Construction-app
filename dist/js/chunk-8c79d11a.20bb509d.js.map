{"version":3,"sources":["webpack:///./src/components/common/Modal.tsx","webpack:///./src/core/FormComponent.tsx","webpack:///./src/pages/rent/Detail.tsx","webpack:///./src/interfaces/appointment.ts","webpack:///./src/components/realstate/Appointment.tsx"],"names":["Modal","props","this","value","document","body","style","overflow","event","preventDefault","$emit","stopPropagation","$scopedSlots","header","title","$slots","default","Vue","__decorate","Prop","required","Watch","Component","FormComponent","Object","keys","errors","reduce","acc","key","length","message","field","forEach","RentDetail","isLoading","showAvailabilityModal","appointment","rent","name","description","excerpt","machinery","price","checkRoute","status","AppointmentType","RENT","id","$route","params","getRent","checkAppointment","type","deep","methods","mapActions","AppointmentStatus","Appointment","saving","formData","REALSTATE","user_id","date","updateUserID","rent_id","realstate_id","minDate","moment","add","format","maxDate","formSubmit","validate","then","result","$nextTick","hasError","requestAppointment","data","errorList","user","computed","mapGetters"],"mappings":"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","file":"js/chunk-8c79d11a.20bb509d.js","sourcesContent":["import { VNode } from \"vue\"\nimport { Component, Prop, Vue, Watch } from \"vue-property-decorator\"\n\n@Component\nexport default class Modal extends Vue {\n\n    constructor(props: any) {\n        super(props)\n    }\n\n    @Prop({ required: true }) value!: boolean\n    @Prop({ default: null }) title!: string | null\n\n    @Watch('value')\n    valueChanged() {\n        if (this.value)\n            document.body.style.overflow = 'hidden'\n        else\n            document.body.style.overflow = ''\n    }\n\n    render(): VNode {\n        return <div class={{ \"modal\": true, \"modal--active\": this.value }} onClick={(event: MouseEvent) => {\n            event.preventDefault()\n            this.$emit('input', false)\n        }}>\n            <div class=\"modal__holder\" onClick={(event: MouseEvent) => {\n                event.stopPropagation()\n            }}>\n                {this.$scopedSlots.header\n                    ? <header class=\"modal__header\">\n                        {this.$scopedSlots.header({})}\n                    </header>\n                    : this.title\n                        ? <header class=\"modal__header\">\n                            <h2>{this.title}</h2>\n                        </header>\n                        : null}\n                <div class=\"modal__body\">\n                    {this.$slots.default}\n                </div>\n                <footer class=\"modal__footer\">\n                    <button class=\"btn btn__default btn__xs\" onClick={(event: MouseEvent) => {\n                        event.preventDefault()\n                        this.$emit('input', false)\n                    }}>close</button>\n                </footer>\n            </div>\n        </div>\n    }\n}","import { iErrorMessage } from '@/interfaces/auth'\nimport { Component, Vue } from 'vue-property-decorator'\n\n// let timer: any\n@Component\nexport default class FormComponent extends Vue {\n    protected errors!: iErrorMessage\n\n    // @Watch('errors', { deep: true })\n    // errorWatcher() {\n    //     if (timer)\n    //         return\n\n    //     timer = setTimeout(() => {\n    //         this.resetErrorMessage()\n    //     }, 7000)\n    // }\n\n    /**\n    * Checks if there are any errors\n    * \n    * @returns boolean\n    */\n    get hasError(): boolean {\n        return Object.keys(this.errors).reduce((acc: boolean, key: string): boolean => {\n            return acc || this.errors[key].length > 0\n        }, false)\n    }\n\n    get errorMessage(): string {\n        let message: string = ''\n\n        for (const field in this.errors) {\n            if (this.errors[field].length > 0) {\n                message = this.errors[field][0]\n                return message\n            }\n        }\n        return message\n    }\n\n    protected resetErrorMessage(): void {\n\n        Object.keys(this.errors).forEach((key: string) => {\n            this.errors[key] = []\n        })\n    }\n}\n","import { VNode } from 'vue'\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport { mapActions } from 'vuex'\n\nimport { iRent } from '@/interfaces/app'\nimport { appointment, AppointmentType } from '@/interfaces/appointment'\n\nimport Modal from '@/components/common/Modal'\nimport Appointment from '@/components/realstate/Appointment'\n\n@Component({\n    methods: {\n        ...mapActions({\n            getRent: 'rent/getRent',\n            checkAppointment: 'appointment/checkAppointment',\n        })\n    }\n})\nexport default class RentDetail extends Vue {\n    private isLoading: boolean = false\n    private showAvailabilityModal: boolean = false\n\n    private getRent!: (id: string) => iRent\n    private checkAppointment!: (payload: { type: string, id: string }) => any\n    private appointment: appointment | null = null\n\n    private rent: iRent = {\n        name: '',\n        description: '',\n        excerpt: '',\n        machinery: '',\n        price: ''\n    }\n\n    @Watch('$route', { deep: true })\n    routeWatcher() {\n        this.checkRoute()\n    }\n\n    mounted() {\n        this.checkRoute()\n    }\n\n    render(): VNode {\n        return (<main id=\"main\">\n            <section class=\"item__section\">\n                {!this.isLoading\n                    ? <div class=\"item__detail\">\n                        {this.appointment && Object.keys(this.appointment).length > 0\n                            ? <div class=\"meta__info\">\n                                <p>Your appointment for this propperty has <span class=\"text--primary\">{this.appointment.status}</span> status. You will soon get updates</p>\n                            </div>\n                            : <div class=\"text--right mb-4\">\n                                <a href=\"#\" class=\"btn btn__xs btn__primary\" onClick={(event: MouseEvent) => {\n                                    event.preventDefault()\n                                    this.showAvailabilityModal = true\n                                }}>Request Appointment</a>\n                            </div>}\n                        <div class=\"item__detail__description\">\n                            <h2 class=\"title\">{this.rent.name}</h2>\n                            <div class=\"holder\">\n                                <em class=\"price\">Rs.{this.rent.price}</em>\n                                <strong class=\"sub__heading\">{this.rent.machinery}</strong>\n                            </div>\n                            <div class=\"text__holder\" domPropsInnerHTML={this.rent.description} />\n                        </div>\n                    </div>\n                    : null\n                }\n                <Modal v-model={this.showAvailabilityModal}>\n                    <Appointment type={AppointmentType.RENT} onClose={() => { this.showAvailabilityModal = false }} />\n                </Modal>\n            </section>\n        </main>)\n    }\n\n    async checkRoute() {\n        this.isLoading = true\n        const id = this.$route?.params?.id\n\n        this.rent = await this.getRent(id)\n        this.appointment = await this.checkAppointment({ type: AppointmentType.RENT, id })\n\n        this.isLoading = false\n    }\n}\n","import { iUserDetail } from './auth'\n\nexport enum AppointmentStatus {\n    REQUESTED = 'requested',\n    ACCEPTED = 'accepted',\n    REJECTED = 'rejected',\n    // DELAYED = 'delayed',\n}\n\nexport interface appointment {\n    id?: string\n    user_id: string\n    realstate_id?: string\n    rent_id?: string\n    status?: AppointmentStatus\n    user?: iUserDetail\n    type: AppointmentType\n    date: string\n}\n\nexport enum AppointmentType {\n    REALSTATE = 'realstate',\n    RENT = 'rent'\n}","import { VNode } from 'vue'\nimport { Component, Prop, Watch } from \"vue-property-decorator\"\nimport { mapActions, mapGetters } from 'vuex'\n\nimport FormComponent from '@/core/FormComponent'\nimport { iErrorMessage, iUserDetail } from '@/interfaces/auth'\nimport { validate } from 'vee-validate'\nimport { appointment, AppointmentType } from '@/interfaces/appointment'\nimport moment from 'moment'\n\n@Component({\n    computed: {\n        ...mapGetters({\n            errorList: 'root/getErrorMessage',\n            user: 'root/getLoggedinUser'\n        })\n    },\n    methods: {\n        ...mapActions({\n            requestAppointment: 'appointment/requestAppointment'\n        })\n    }\n})\nexport default class Appointment extends FormComponent {\n    private user!: iUserDetail\n    private saving: boolean = false\n    private errorList?: iErrorMessage\n    private requestAppointment!: (formData: appointment) => Promise<boolean>\n    private formData: appointment = {\n        type: AppointmentType.REALSTATE,\n        user_id: '',\n        date: ''\n    }\n\n    constructor(props: any) {\n        super(props)\n\n        this.errors = {\n            date: []\n        }\n    }\n\n    @Prop({ default: AppointmentType.REALSTATE }) type!: AppointmentType\n\n    @Watch('user', { deep: true })\n    userChanged() {\n        this.updateUserID()\n    }\n\n    mounted() {\n        this.updateUserID()\n\n        this.formData.type = this.type\n\n        if (this.type == AppointmentType.RENT)\n            this.formData.rent_id = this.$route.params.id\n        else\n            this.formData.realstate_id = this.$route.params.id\n    }\n\n    render(): VNode {\n        const minDate: string = moment().add(1, 'day').format('YYYY-MM-DD') + 'T00:00'\n        const maxDate: string = moment().add(1, 'month').format('YYYY-MM-DD') + 'T00:00'\n\n        return <div class=\"appointment\">\n            <h2>Get an appointment</h2>\n            <p>You can choose a date to vist for Property</p>\n            <form action=\"#\" novalidate onSubmit={this.formSubmit}>\n                <div class={{ 'form__group': true, 'input--invalid': this.errors.date.length > 0 }}>\n                    <label for=\"date\">Choose a date</label>\n                    <input type=\"datetime-local\" name=\"date\" id=\"date\" placeholder=\"Choose a date\" max={maxDate} min={minDate} v-model={this.formData.date} />\n                    {this.errors.date.length > 0 ? (<span class=\"input__text\">{this.errors.date[0]}</span>) : null}\n                </div>\n                <div className=\"btn__holder text--right\">\n                    <button class=\"btn btn__primary\">Request</button>\n                </div>\n            </form>\n        </div>\n    }\n\n    async formSubmit(event: HTMLFormElement) {\n        event.preventDefault()\n\n        await validate(this.formData.date, 'required', { name: 'date' })\n            .then(result => {\n                this.errors['date'] = result.errors\n            })\n\n        this.$nextTick(async () => {\n            if (!this.hasError) {\n                this.saving = true\n\n                try {\n                    const data = await this.requestAppointment(this.formData)\n\n                    if (data) {\n                        this.$emit('close')\n                    } else {\n                        this.errors = { ...this.errors, ...this.errorList }\n                    }\n\n                } finally {\n                    this.saving = false\n                }\n            }\n        })\n    }\n\n    updateUserID() {\n        if (this.user.id)\n            this.formData.user_id = this.user.id\n    }\n}"],"sourceRoot":""}