{"version":3,"sources":["webpack:///./src/components/common/Modal.tsx","webpack:///./src/pages/realState/Detail.tsx","webpack:///./src/core/FormComponent.tsx","webpack:///./src/components/realstate/Services.tsx","webpack:///./src/interfaces/appointment.ts","webpack:///./src/components/realstate/Appointment.tsx"],"names":["Modal","props","this","value","document","body","style","overflow","event","preventDefault","$emit","stopPropagation","$slots","default","required","slickOpt","rows","arrows","dots","RealstateDetail","isLoading","appointment","showAvailabilityModal","property","location","rate","unit","excerpt","description","id","$route","params","getProperty","checkAppointment","setTimeout","$refs","propertyDetailSlick","reSlick","Object","keys","length","status","images","map","image","image_url","name","detail","methods","FormComponent","errors","reduce","acc","key","message","field","forEach","RealestateService","item","bedroom","bathroom","parking","AppointmentStatus","AppointmentType","Appointment","saving","formData","type","REALSTATE","user_id","date","updateUserID","RENT","rent_id","realstate_id","minDate","add","format","maxDate","formSubmit","then","result","$nextTick","hasError","requestAppointment","data","errorList","user","uuid","deep","computed"],"mappings":"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","file":"js/chunk-83da547a.5ddff873.js","sourcesContent":["import { VNode } from \"vue\"\r\nimport { Component, Prop, Vue, Watch } from \"vue-property-decorator\"\r\n\r\n@Component\r\nexport default class Modal extends Vue {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    @Prop({ required: true }) value!: boolean\r\n\r\n    @Watch('value')\r\n    valueChanged() {\r\n        if (this.value)\r\n            document.body.style.overflow = 'hidden'\r\n        else\r\n            document.body.style.overflow = ''\r\n    }\r\n\r\n    render(): VNode {\r\n        return <div class={{ \"modal\": true, \"modal--active\": this.value }} onClick={(event: MouseEvent) => {\r\n            event.preventDefault()\r\n            this.$emit('input', false)\r\n        }}>\r\n            <div class=\"modal__holder\" onClick={(event: MouseEvent) => {\r\n                event.stopPropagation()\r\n            }}>\r\n                <div class=\"modal__body\">\r\n                    {this.$slots.default}\r\n                </div>\r\n                <footer class=\"modal__footer\">\r\n                    <button class=\"btn btn__default btn__xs\" onClick={(event: MouseEvent) => {\r\n                        event.preventDefault()\r\n                        this.$emit('input', false)\r\n                    }}>close</button>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import { VNode } from 'vue'\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport { mapActions } from 'vuex'\r\nimport Slick from 'vue-slick'\r\n\r\nimport { iImage, iRealState } from '@/interfaces/app'\r\nimport { appointment } from '@/interfaces/appointment'\r\n\r\nimport RealestateCollection from '@/components/realstate/Collection'\r\nimport RealestateService from '@/components/realstate/Services'\r\nimport Modal from '@/components/common/Modal'\r\nimport Appointment from '@/components/realstate/Appointment'\r\n\r\nconst slickOpt = {\r\n    rows: 0,\r\n    arrows: false,\r\n    dots: true\r\n}\r\n\r\n@Component({\r\n    methods: {\r\n        ...mapActions({\r\n            getProperty: 'realstate/getProperty',\r\n            checkAppointment: 'appointment/checkAppointment',\r\n        })\r\n    }\r\n})\r\nexport default class RealstateDetail extends Vue {\r\n    private isLoading: boolean = false\r\n    private appointment: appointment | null = null\r\n\r\n    private getProperty!: (id: string) => iRealState\r\n    private checkAppointment!: (realstate_id: string) => any\r\n    private showAvailabilityModal: boolean = false\r\n    private property: iRealState = {\r\n        location: '',\r\n        rate: '',\r\n        unit: '',\r\n        excerpt: '',\r\n        description: '',\r\n    }\r\n\r\n    async mounted() {\r\n        this.isLoading = true\r\n        const id = this.$route?.params?.id\r\n        this.property = await this.getProperty(id)\r\n        this.appointment = await this.checkAppointment(id)\r\n\r\n        this.isLoading = false\r\n\r\n        setTimeout(() => {\r\n            (this.$refs?.propertyDetailSlick as any)?.reSlick()\r\n        }, 500)\r\n    }\r\n\r\n    render(): VNode {\r\n        return (<main id=\"main\">\r\n            <section class=\"item__section\">\r\n                <div class=\"item__detail\">\r\n                    {!this.isLoading\r\n                        ? [\r\n                            this.appointment && Object.keys(this.appointment).length > 0\r\n                                ? <div class=\"meta__info\">\r\n                                    <p>Your appointment for this propperty has <span class=\"text--primary\">{this.appointment.status}</span> status. You will soon get updates</p>\r\n                                </div>\r\n                                : <div class=\"text--right mb-4\">\r\n                                    <a href=\"#\" class=\"btn btn__xs btn__primary\" onClick={(event: MouseEvent) => {\r\n                                        event.preventDefault()\r\n                                        this.showAvailabilityModal = true\r\n                                    }}>Request Appointment</a>\r\n                                </div>,\r\n                            this.property.images\r\n                                ? <Slick class=\"item__detail__image\" options={slickOpt} ref=\"propertyDetailSlick\">\r\n                                    {this.property.images?.map((image: iImage) => (<img src={image.image_url} alt={this.property.name} />))}\r\n                                </Slick>\r\n                                : null,\r\n                            <div class=\"item__detail__description\">\r\n                                <h2>{this.property.location}</h2>\r\n                                <div class=\"text__holder\" domPropsInnerHTML={this.property.description} />\r\n                                {this.property.detail ? (<RealestateService item={this.property.detail} />) : null}\r\n                            </div>\r\n                        ]\r\n                        : null}\r\n                </div>\r\n            </section>\r\n            <RealestateCollection />\r\n            <Modal v-model={this.showAvailabilityModal}>\r\n                <Appointment onClose={() => { this.showAvailabilityModal = false }} />\r\n            </Modal>\r\n        </main>)\r\n    }\r\n}\r\n","import { iErrorMessage } from '@/interfaces/auth'\r\nimport { Component, Vue } from 'vue-property-decorator'\r\n\r\n// let timer: any\r\n@Component\r\nexport default class FormComponent extends Vue {\r\n    protected errors!: iErrorMessage\r\n\r\n    // @Watch('errors', { deep: true })\r\n    // errorWatcher() {\r\n    //     if (timer)\r\n    //         return\r\n\r\n    //     timer = setTimeout(() => {\r\n    //         this.resetErrorMessage()\r\n    //     }, 7000)\r\n    // }\r\n\r\n    /**\r\n    * Checks if there are any errors\r\n    * \r\n    * @returns boolean\r\n    */\r\n    get hasError(): boolean {\r\n        return Object.keys(this.errors).reduce((acc: boolean, key: string): boolean => {\r\n            return acc || this.errors[key].length > 0\r\n        }, false)\r\n    }\r\n\r\n    get errorMessage(): string {\r\n        let message: string = ''\r\n\r\n        for (const field in this.errors) {\r\n            if (this.errors[field].length > 0) {\r\n                message = this.errors[field][0]\r\n                return message\r\n            }\r\n        }\r\n        return message\r\n    }\r\n\r\n    protected resetErrorMessage(): void {\r\n\r\n        Object.keys(this.errors).forEach((key: string) => {\r\n            this.errors[key] = []\r\n        })\r\n    }\r\n}\r\n","import { VNode } from 'vue'\r\nimport { Component, Prop, Vue } from 'vue-property-decorator'\r\n\r\nimport { iService } from '@/interfaces/app'\r\n\r\n@Component\r\nexport default class RealestateService extends Vue {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    @Prop({ required: true }) item!: iService\r\n\r\n    /**\r\n     * @returns VNode\r\n     */\r\n    render(): VNode {\r\n        return (<div class=\"service__list\">\r\n            {this.item?.bedroom ? (<div class=\"service__item\">\r\n                <span class=\"icon-bed\"></span>\r\n                <span class=\"text\">+{this.item?.bedroom}</span>\r\n            </div>) : null}\r\n            {this.item?.bathroom ? (<div class=\"service__item\">\r\n                <span class=\"icon-shower\"></span>\r\n                <span class=\"text\">+{this.item?.bathroom}</span>\r\n            </div>) : null}\r\n            {this.item?.parking ? (<div class=\"service__item\">\r\n                <span class=\"icon-car\"></span>\r\n                <span class=\"text\">+{this.item?.parking}</span>\r\n            </div>) : null}\r\n        </div>)\r\n    }\r\n}\r\n","import { iUserDetail } from './auth'\r\n\r\nexport enum AppointmentStatus {\r\n    REQUESTED = 'requested',\r\n    ACCEPTED = 'accepted',\r\n    REJECTED = 'rejected',\r\n    // DELAYED = 'delayed',\r\n}\r\n\r\nexport interface appointment {\r\n    id?: string\r\n    user_id: string\r\n    realstate_id?: string\r\n    rent_id?: string\r\n    status?: AppointmentStatus\r\n    user?: iUserDetail\r\n    type: AppointmentType\r\n    date: string\r\n}\r\n\r\nexport enum AppointmentType {\r\n    REALSTATE = 'realstate',\r\n    RENT = 'rent'\r\n}","import { VNode } from 'vue'\r\nimport { Component, Prop, Watch } from \"vue-property-decorator\"\r\nimport { mapActions, mapGetters } from 'vuex'\r\n\r\nimport FormComponent from '@/core/FormComponent'\r\nimport { iErrorMessage, iUserDetail } from '@/interfaces/auth'\r\nimport { validate } from 'vee-validate'\r\nimport { appointment, AppointmentType } from '@/interfaces/appointment'\r\nimport moment from 'moment'\r\n\r\n@Component({\r\n    computed: {\r\n        ...mapGetters({\r\n            errorList: 'root/getErrorMessage',\r\n            user: 'root/getLoggedinUser'\r\n        })\r\n    },\r\n    methods: {\r\n        ...mapActions({\r\n            requestAppointment: 'appointment/requestAppointment'\r\n        })\r\n    }\r\n})\r\nexport default class Appointment extends FormComponent {\r\n    private user!: iUserDetail\r\n    private saving: boolean = false\r\n    private errorList?: iErrorMessage\r\n    private requestAppointment!: (formData: appointment) => Promise<boolean>\r\n    private formData: appointment = {\r\n        type: AppointmentType.REALSTATE,\r\n        user_id: '',\r\n        date: ''\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n\r\n        this.errors = {\r\n            date: []\r\n        }\r\n    }\r\n\r\n    @Prop({ default: AppointmentType.REALSTATE }) type!: AppointmentType\r\n\r\n    @Watch('user', { deep: true })\r\n    userChanged() {\r\n        this.updateUserID()\r\n    }\r\n\r\n    mounted() {\r\n        this.updateUserID()\r\n\r\n        this.formData.type = this.type\r\n\r\n        if (this.type == AppointmentType.RENT)\r\n            this.formData.rent_id = this.$route.params.id\r\n        else\r\n            this.formData.realstate_id = this.$route.params.id\r\n    }\r\n\r\n    render(): VNode {\r\n        const minDate: string = moment().add(1, 'day').format('YYYY-MM-DD') + 'T00:00'\r\n        const maxDate: string = moment().add(1, 'month').format('YYYY-MM-DD') + 'T00:00'\r\n\r\n        return <div class=\"appointment\">\r\n            <h2>Get an appointment</h2>\r\n            <p>You can choose a date to vist for Property</p>\r\n            <form action=\"#\" novalidate onSubmit={this.formSubmit}>\r\n                <div class={{ 'form__group': true, 'input--invalid': this.errors.date.length > 0 }}>\r\n                    <label for=\"date\">Choose a date</label>\r\n                    <input type=\"datetime-local\" name=\"date\" id=\"date\" placeholder=\"Choose a date\" max={maxDate} min={minDate} v-model={this.formData.date} />\r\n                    {this.errors.date.length > 0 ? (<span class=\"input__text\">{this.errors.date[0]}</span>) : null}\r\n                </div>\r\n                <div className=\"btn__holder text--right\">\r\n                    <button class=\"btn btn__primary\">Request</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n    async formSubmit(event: HTMLFormElement) {\r\n        event.preventDefault()\r\n\r\n        await validate(this.formData.date, 'required', { name: 'date' })\r\n            .then(result => {\r\n                this.errors['date'] = result.errors\r\n            })\r\n\r\n        this.$nextTick(async () => {\r\n            if (!this.hasError) {\r\n                this.saving = true\r\n\r\n                try {\r\n                    const data = await this.requestAppointment(this.formData)\r\n\r\n                    if (data) {\r\n                        this.$emit('close')\r\n                    } else {\r\n                        this.errors = { ...this.errors, ...this.errorList }\r\n                    }\r\n\r\n                } finally {\r\n                    this.saving = false\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    updateUserID() {\r\n        if (this.user.uuid)\r\n            this.formData.user_id = this.user.uuid\r\n    }\r\n}"],"sourceRoot":""}