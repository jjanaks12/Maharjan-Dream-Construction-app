{"version":3,"sources":["webpack:///./node_modules/os-browserify/browser.js","webpack:///./node_modules/dotenv/lib/env-options.js","webpack:///./node_modules/dotenv/config.js","webpack:///./node_modules/dotenv/lib/cli-options.js","webpack:///./node_modules/dotenv/lib/main.js"],"names":["exports","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","homedir","options","DOTENV_CONFIG_ENCODING","encoding","DOTENV_CONFIG_PATH","path","DOTENV_CONFIG_DEBUG","debug","DOTENV_CONFIG_OVERRIDE","override","module","config","Object","assign","process","argv","re","args","reduce","acc","cur","matches","match","os","LINE","parse","src","obj","lines","toString","replace","exec","key","value","trim","maybeQuote","_log","message","console","log","_resolveHome","envPath","join","slice","dotenvPath","resolve","cwd","Boolean","parsed","DotenvModule","fs","readFileSync","keys","forEach","prototype","hasOwnProperty","call","e","error"],"mappings":"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","file":"js/chunk-ca43a7d8.071d6b34.js","sourcesContent":["exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","// ../config.js accepts options via environment variables\nconst options = {}\n\nif (process.env.DOTENV_CONFIG_ENCODING != null) {\n  options.encoding = process.env.DOTENV_CONFIG_ENCODING\n}\n\nif (process.env.DOTENV_CONFIG_PATH != null) {\n  options.path = process.env.DOTENV_CONFIG_PATH\n}\n\nif (process.env.DOTENV_CONFIG_DEBUG != null) {\n  options.debug = process.env.DOTENV_CONFIG_DEBUG\n}\n\nif (process.env.DOTENV_CONFIG_OVERRIDE != null) {\n  options.override = process.env.DOTENV_CONFIG_OVERRIDE\n}\n\nmodule.exports = options\n","(function () {\n  require('./lib/main').config(\n    Object.assign(\n      {},\n      require('./lib/env-options'),\n      require('./lib/cli-options')(process.argv)\n    )\n  )\n})()\n","const re = /^dotenv_config_(encoding|path|debug|override)=(.+)$/\n\nmodule.exports = function optionMatcher (args) {\n  return args.reduce(function (acc, cur) {\n    const matches = cur.match(re)\n    if (matches) {\n      acc[matches[1]] = matches[2]\n    }\n    return acc\n  }, {})\n}\n","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n"],"sourceRoot":""}