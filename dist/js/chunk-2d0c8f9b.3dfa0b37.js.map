{"version":3,"sources":["webpack:///./src/pages/training/Detail.tsx"],"names":["TrainingDetail","hasEnrolled","training","title","excerpt","description","duration","duration_type","price","start_date","this","checkRoute","id","checkEnrolled","moment","diff","local","format","remainingDay","event","preventDefault","enroll","then","$route","params","getTraining","isEnrolled","data","$forceUpdate","Vue","__decorate","Watch","deep","Component","methods","mapActions"],"mappings":"8RAgBqBA,EAAc,wDAAnC,iD,0BAIY,EAAAC,aAAuB,EAEvB,EAAAC,SAAsB,CAC1BC,MAAO,GACPC,QAAS,GACTC,YAAa,GACbC,SAAU,GACVC,cAAe,GACfC,MAAO,GACPC,WAAY,IAbpB,EAAmC,mDAiB/B,WACIC,KAAKC,eAlBsB,6BAsB/B,WACQD,KAAKR,SAASU,IACdF,KAAKG,kBAxBkB,qBA4B/B,WACIH,KAAKC,eA7BsB,wBAgC/B,WACI,OAAOG,IAAOJ,KAAKR,SAASO,YAAYM,KAAKD,MAAU,UAjC5B,oBAoC/B,WAAM,0BACF,2BAAiB,SAAjB,oBACmB,mCADnB,gBAEmB,gBAFnB,gBAGuB,6BAHvB,eAI0B,SAJ1B,CAImCJ,KAAKR,SAASC,QAJjD,eAK2B,UAL3B,eAM8B,SAN9B,kBAMiDO,KAAKR,SAASM,QAN/D,QAMkFE,KAAKR,SAASI,SAAUI,KAAKR,SAASK,gBANxH,gBAOgC,QAPhC,cAOkDO,IAAOJ,KAAKR,SAASO,YAAYO,QAAQC,OAAO,iCAPlG,eAS2B,eAT3B,oBAS6DP,KAAKR,SAASG,mBAT3E,kBAYsB,yBAZtB,CAaaK,KAAKT,YACA,KACAS,KAAKQ,aAAe,EAChB,CAAC,EAAD,cACc,cADd,CAC4BR,KAAKQ,aADjC,OACmDR,KAAKQ,aAAe,EAAI,IAAM,GADjF,kDAEU,KAFV,MAEoB,2BAFpB,UAEwD,SAACC,GACnDA,EAAMC,iBACN,EAAKC,OAAO,EAAKnB,UACZoB,MAAK,WACF,EAAKT,sBANnB,iBADJ,eAWe,UAXf,8FApDS,iFAyE/B,+GACUD,EADV,UACeF,KAAKa,cADpB,iBACe,EAAaC,cAD5B,aACe,EAAqBZ,GADpC,SAE0BF,KAAKe,YAAYb,GAF3C,OAEIF,KAAKR,SAFT,uDAzE+B,6IA8E/B,yHACUQ,KAAKgB,WAAWhB,KAAKR,UACtBoB,MAAK,SAACK,GAECA,IACA,EAAK1B,aAAc,EACnB,EAAK2B,mBANrB,gDA9E+B,8DAASC,QAiBxCC,gBADCC,eAAM,SAAU,CAAEC,MAAM,KACzB,iCAKAF,gBADCC,eAAM,aACP,oCAtBiB/B,EAAc,gBATlCiC,eAAU,CACPC,QAAS,kBACFC,eAAW,CACVV,YAAa,uBACbJ,OAAQ,kBACRK,WAAY,4BAIH1B","file":"js/chunk-2d0c8f9b.3dfa0b37.js","sourcesContent":["import { VNode } from 'vue'\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport { mapActions } from 'vuex'\n\nimport { iTraining } from '@/interfaces/app'\nimport moment from 'moment'\n\n@Component({\n    methods: {\n        ...mapActions({\n            getTraining: 'training/getTraining',\n            enroll: 'training/enroll',\n            isEnrolled: 'training/isEnrolled',\n        })\n    }\n})\nexport default class TrainingDetail extends Vue {\n    private getTraining!: (id: string) => iTraining\n    private isEnrolled!: (training: iTraining) => Promise<boolean>\n    private enroll!: (training: iTraining) => Promise<boolean>\n    private hasEnrolled: boolean = false\n\n    private training: iTraining = {\n        title: '',\n        excerpt: '',\n        description: '',\n        duration: '',\n        duration_type: '',\n        price: '',\n        start_date: '',\n    }\n\n    @Watch('$route', { deep: true })\n    routeWatcher() {\n        this.checkRoute()\n    }\n\n    @Watch('training')\n    trainingUpdated() {\n        if (this.training.id) {\n            this.checkEnrolled()\n        }\n    }\n\n    mounted() {\n        this.checkRoute()\n    }\n\n    get remainingDay(): number {\n        return moment(this.training.start_date).diff(moment(), 'days')\n    }\n\n    render(): VNode {\n        return (<main id=\"main\">\n            <section class=\"item__section training__section\">\n                <div class=\"item__detail\">\n                    <div class=\"item__detail__description\">\n                        <h1 class=\"title\">{this.training.title}</h1>\n                        <div class=\"holder\">\n                            <em class=\"price\"><span>Rs. {this.training.price}</span> for {this.training.duration}{this.training.duration_type}</em>\n                            <span class=\"date\">Starts on {moment(this.training.start_date).local().format('Do [of] MMM, [at] hh:mm a')}</span>\n                        </div>\n                        <div class=\"text__holder\" domPropsInnerHTML={this.training.description} />\n                    </div>\n                </div>\n                <footer class=\"item__section__footer\">\n                    {this.hasEnrolled\n                        ? null\n                        : this.remainingDay > 0\n                            ? [\n                                <span class=\"day__count\">{this.remainingDay} day{this.remainingDay > 1 ? 's' : ''} left till Training starts</span>,\n                                <a href=\"#\" class=\"btn btn__success btn__xs\" onClick={(event: MouseEvent) => {\n                                    event.preventDefault()\n                                    this.enroll(this.training)\n                                        .then(() => {\n                                            this.checkEnrolled()\n                                        })\n                                }}>Enroll now</a>\n                            ]\n                            : <div class=\"notice\">\n                                <strong>This training is over</strong>\n                                <p>Please wait for new date release.</p>\n                            </div>\n                    }\n                </footer>\n            </section>\n        </main>)\n    }\n\n    async checkRoute() {\n        const id = this.$route?.params?.id as string\n        this.training = await this.getTraining(id)\n    }\n\n    async checkEnrolled() {\n        await this.isEnrolled(this.training)\n            .then((data) => {\n\n                if (data) {\n                    this.hasEnrolled = true\n                    this.$forceUpdate()\n                }\n            })\n    }\n}\n"],"sourceRoot":""}