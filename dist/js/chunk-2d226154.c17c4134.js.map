{"version":3,"sources":["webpack:///./src/pages/material/Detail.tsx"],"names":["slickOpt","rows","arrows","dots","MaterialDetail","material","name","description","material_category_id","measurement_unit","price","quantity","this","checkRoute","Boolean","cartList","find","cart","id","isOnCart","event","preventDefault","addToCart","images","map","image","image_url","$route","params","getMaterial","setTimeout","$refs","materialDetailSlick","reSlick","Vue","__decorate","Watch","deep","Component","computed","mapGetters","methods","mapActions","mapMutations"],"mappings":"2TAQMA,EAAW,CACbC,KAAM,EACNC,QAAQ,EACRC,MAAM,GAkBWC,EAAc,wDAAnC,iD,0BAKY,EAAAC,SAAsB,CAC1BC,KAAM,GACNC,YAAa,GACbC,qBAAsB,GACtBC,iBAAkB,GAClBC,MAAO,EACPC,SAAU,IAXlB,EAAmC,mDAe/B,WACIC,KAAKC,eAhBsB,qBAmB/B,WACID,KAAKC,eApBsB,oBAuB/B,WAAY,WACR,OAAOC,QAAQF,KAAKG,SAASC,MAAK,SAACC,GAAD,OAAiBA,EAAKZ,SAASa,KAAO,EAAKb,SAASa,SAxB3D,oBA2B/B,WAAM,4BACF,2BAAiB,SAAjB,oBACmB,iBADnB,CAEUN,KAAKO,SAIM,KAJZ,kBAAgC,0BAAhC,gBACc,eADd,oBAEe,KAFf,MAEyB,2BAFzB,UAE6D,SAACC,GAAwBA,EAAMC,iBAAkB,EAAKC,UAAU,EAAKjB,aAFlI,qBAFT,eAOmB,gBAPnB,iBAQyB,sBARzB,eAQwDL,GARxD,IAQsE,uBARtE,WASiBY,KAAKP,SAASkB,cAT/B,aASiB,EAAsBC,KAAI,SAACC,GAAD,2BAA8BA,EAAMC,UAApC,IAAoD,EAAKrB,SAASC,aAT7G,eAWuB,6BAXvB,SAYqBM,KAAKP,SAASC,OAZnC,eAa2B,eAb3B,oBAa6DM,KAAKP,SAASE,yBAzChD,iFAgD/B,sHACUW,EADV,UACeN,KAAKe,cADpB,iBACe,EAAaC,cAD5B,aACe,EAAqBV,GADpC,SAE0BN,KAAKiB,YAAYX,GAF3C,OAEIN,KAAKP,SAFT,OAIIyB,YAAW,WAAK,QACX,YAAKC,aAAL,mBAAYC,2BAAZ,SAAyCC,YAC3C,KANP,gDAhD+B,8DAASC,QAexCC,gBADCC,eAAM,SAAU,CAAEC,MAAM,KACzB,iCAfiBjC,EAAc,gBAflCkC,eAAU,CACPC,SAAU,kBACHC,eAAW,CACVzB,SAAU,kBAGlB0B,QAAS,iCACFC,eAAW,CACVb,YAAa,0BAEdc,eAAa,CACZrB,UAAW,yBAIFlB","file":"js/chunk-2d226154.c17c4134.js","sourcesContent":["import { VNode } from 'vue'\nimport { Component, Vue, Watch } from 'vue-property-decorator'\nimport { mapActions, mapGetters, mapMutations } from 'vuex'\nimport Slick from 'vue-slick'\n\nimport { iCart } from '@/interfaces/cart'\nimport { iImage, iMaterial } from '@/interfaces/app'\n\nconst slickOpt = {\n    rows: 0,\n    arrows: false,\n    dots: true\n}\n\n@Component({\n    computed: {\n        ...mapGetters({\n            cartList: 'cart/getList'\n        })\n    },\n    methods: {\n        ...mapActions({\n            getMaterial: 'material/getMaterial',\n        }),\n        ...mapMutations({\n            addToCart: 'cart/ADD_TO_CART'\n        })\n    }\n})\nexport default class MaterialDetail extends Vue {\n    private getMaterial!: (id: string) => iMaterial\n    private addToCart!: (item: iMaterial) => Promise<boolean>\n    private cartList!: Array<iCart>\n\n    private material: iMaterial = {\n        name: '',\n        description: '',\n        material_category_id: '',\n        measurement_unit: '',\n        price: 0,\n        quantity: ''\n    }\n\n    @Watch('$route', { deep: true })\n    routeWatcher() {\n        this.checkRoute()\n    }\n\n    mounted() {\n        this.checkRoute()\n    }\n\n    get isOnCart(): boolean {\n        return Boolean(this.cartList.find((cart: iCart) => cart.material.id === this.material.id))\n    }\n\n    render(): VNode {\n        return (<main id=\"main\">\n            <section class=\"item__section\">\n                {!this.isOnCart ? (<header class=\"item__section__heading\">\n                    <div class=\"btn__holder\">\n                        <a href=\"#\" class=\"btn btn__xs btn__primary\" onClick={(event: MouseEvent) => { event.preventDefault(); this.addToCart(this.material) }}>add to cart</a>\n                    </div>\n                </header>) : null}\n                <div class=\"item__detail\">\n                    <Slick class=\"item__detail__image\" options={slickOpt} ref=\"materialDetailSlick\">\n                        {this.material.images?.map((image: iImage) => (<img src={image.image_url} alt={this.material.name} />))}\n                    </Slick>\n                    <div class=\"item__detail__description\">\n                        <h2>{this.material.name}</h2>\n                        <div class=\"text__holder\" domPropsInnerHTML={this.material.description} />\n                    </div>\n                </div>\n            </section>\n        </main>)\n    }\n\n    async checkRoute() {\n        const id = this.$route?.params?.id\n        this.material = await this.getMaterial(id)\n\n        setTimeout(() => {\n            (this.$refs?.materialDetailSlick as any)?.reSlick()\n        }, 500)\n    }\n}\n"],"sourceRoot":""}