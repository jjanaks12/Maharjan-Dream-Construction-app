{"version":3,"sources":["webpack:///./src/components/common/Modal.tsx","webpack:///./src/core/FormComponent.tsx","webpack:///./src/components/account/verify.tsx","webpack:///./src/components/account/ProfileForm.tsx","webpack:///./src/pages/account/Info.tsx"],"names":["Modal","props","this","value","document","body","style","overflow","event","preventDefault","$emit","stopPropagation","$scopedSlots","header","title","$slots","default","Vue","__decorate","Prop","required","Watch","Component","FormComponent","Object","keys","errors","reduce","acc","key","length","message","field","forEach","EmailVerify","isLoading","mailSent","requestEmail","resendEmail","email","userDetail","url","location","origin","then","finally","computed","mapGetters","methods","mapActions","ProfileForm","isSaving","formData","address","name","phone","citizenship_back","citizenship_front","photo","id","fileHandler","formSubmit","element","target","fileList","files","fileReader","FileReader","file","readAsDataURL","onload","result","$forceUpdate","resetErrorMessage","$nextTick","hasError","save","AccountInfo","showProfieForm","Boolean","email_verified_at","photo_url","moment","created_at","local","format","hasCitizenship","citizenship_front_url","citizenship_back_url"],"mappings":"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","file":"js/chunk-0739609d.302e995d.js","sourcesContent":["import { VNode } from \"vue\"\nimport { Component, Prop, Vue, Watch } from \"vue-property-decorator\"\n\n@Component\nexport default class Modal extends Vue {\n\n    constructor(props: any) {\n        super(props)\n    }\n\n    @Prop({ required: true }) value!: boolean\n    @Prop({ default: null }) title!: string | null\n\n    @Watch('value')\n    valueChanged() {\n        if (this.value)\n            document.body.style.overflow = 'hidden'\n        else\n            document.body.style.overflow = ''\n    }\n\n    render(): VNode {\n        return <div class={{ \"modal\": true, \"modal--active\": this.value }} onClick={(event: MouseEvent) => {\n            event.preventDefault()\n            this.$emit('input', false)\n        }}>\n            <div class=\"modal__holder\" onClick={(event: MouseEvent) => {\n                event.stopPropagation()\n            }}>\n                {this.$scopedSlots.header\n                    ? <header class=\"modal__header\">\n                        {this.$scopedSlots.header({})}\n                    </header>\n                    : this.title\n                        ? <header class=\"modal__header\">\n                            <h2>{this.title}</h2>\n                        </header>\n                        : null}\n                <div class=\"modal__body\">\n                    {this.$slots.default}\n                </div>\n                <footer class=\"modal__footer\">\n                    <button class=\"btn btn__default btn__xs\" onClick={(event: MouseEvent) => {\n                        event.preventDefault()\n                        this.$emit('input', false)\n                    }}>close</button>\n                </footer>\n            </div>\n        </div>\n    }\n}","import { iErrorMessage } from '@/interfaces/auth'\nimport { Component, Vue } from 'vue-property-decorator'\n\n// let timer: any\n@Component\nexport default class FormComponent extends Vue {\n    protected errors!: iErrorMessage\n\n    // @Watch('errors', { deep: true })\n    // errorWatcher() {\n    //     if (timer)\n    //         return\n\n    //     timer = setTimeout(() => {\n    //         this.resetErrorMessage()\n    //     }, 7000)\n    // }\n\n    /**\n    * Checks if there are any errors\n    * \n    * @returns boolean\n    */\n    get hasError(): boolean {\n        return Object.keys(this.errors).reduce((acc: boolean, key: string): boolean => {\n            return acc || this.errors[key].length > 0\n        }, false)\n    }\n\n    get errorMessage(): string {\n        let message: string = ''\n\n        for (const field in this.errors) {\n            if (this.errors[field].length > 0) {\n                message = this.errors[field][0]\n                return message\n            }\n        }\n        return message\n    }\n\n    protected resetErrorMessage(): void {\n\n        Object.keys(this.errors).forEach((key: string) => {\n            this.errors[key] = []\n        })\n    }\n}\n","import { VNode } from 'vue'\nimport { Component, Vue } from 'vue-property-decorator'\nimport { mapActions, mapGetters } from 'vuex'\n\nimport { iUserDetail, resedEmail } from '@/interfaces/auth'\n\n@Component({\n    computed: {\n        ...mapGetters({\n            userDetail: 'root/getLoggedinUser'\n        })\n    },\n    methods: {\n        ...mapActions({\n            resendEmail: 'root/resendEmail'\n        })\n    }\n})\nexport default class EmailVerify extends Vue {\n    private userDetail!: iUserDetail\n    private isLoading: boolean = false\n    private mailSent: boolean = false\n    private resendEmail!: (formData: resedEmail) => Promise<boolean>\n\n    constructor(props: any) {\n        super(props)\n    }\n\n    /** \n     * \n     * @returns VNode\n     */\n    render(): VNode {\n        return (<div class=\"meta__info\">\n            {this.mailSent ? [\n                <h3>We have sent you a mail</h3>,\n                <p>Please check your inbox and verify it.</p>\n            ] : (!this.isLoading ? [\n                <h3 class=\"h4\">Your account hasn't been verified</h3>,\n                <p>If you did not get verification mail. <a href=\"#\" onClick={this.requestEmail}>Want to resend?</a></p>\n            ] : [\n                <h3 class=\"h4\">We are sending mail.</h3>,\n                <p>Just a minute please. We will be done...</p>\n            ])}\n        </div>)\n    }\n\n    requestEmail(event: MouseEvent) {\n        event.preventDefault()\n        this.isLoading = true\n\n        this.resendEmail({\n            email: this.userDetail.email,\n            url: location.origin + '/verification'\n        })\n            .then(() => {\n                this.mailSent = true\n            })\n            .finally(() => {\n                this.isLoading = false\n            })\n    }\n}\n","import { VNode } from \"vue\"\nimport { Component, Watch } from \"vue-property-decorator\"\nimport { mapActions, mapGetters } from \"vuex\"\n\nimport FormComponent from \"@/core/FormComponent\"\nimport { iUserDetail } from \"@/interfaces/auth\"\n\ninterface profile {\n    id?: string,\n    address: string,\n    email: string,\n    name: string,\n    phone: string,\n    photo?: Array<string>,\n    citizenship_back?: Array<string>,\n    citizenship_front?: Array<string>,\n    [propName: string]: any\n}\n\n@Component({\n    computed: {\n        ...mapGetters({\n            userDetail: 'root/getLoggedinUser'\n        })\n    },\n    methods: {\n        ...mapActions({\n            save: 'root/save'\n        })\n    }\n})\nexport default class ProfileForm extends FormComponent {\n    private userDetail!: iUserDetail\n    private isSaving: boolean = false\n    private save!: (formData: profile) => Promise<boolean>\n    private formData: profile = {\n        address: '',\n        email: '',\n        name: '',\n        phone: '',\n    }\n\n    constructor(props: any) {\n        super(props)\n\n        this.errors = {\n            address: [],\n            email: [],\n            name: [],\n            phone: [],\n            citizenship_back: [],\n            citizenship_front: [],\n            photo: []\n        }\n    }\n\n    mounted() {\n        this.formData = {\n            id: this.userDetail.id,\n            address: this.userDetail.address,\n            email: this.userDetail.email,\n            name: this.userDetail.name,\n            phone: this.userDetail.phone,\n        }\n    }\n\n    @Watch('userDetail')\n    userDetailChanged() {\n        this.formData = {\n            id: this.userDetail.id,\n            address: this.userDetail.address,\n            email: this.userDetail.email,\n            name: this.userDetail.name,\n            phone: this.userDetail.phone,\n        }\n    }\n\n    render(): VNode {\n        return (<div class=\"account__form\">\n            <div class=\"avatar\">\n                {this.formData.photo && this.formData.photo.length > 0 ? <img src={this.formData.photo[0]} alt={this.formData.name} /> : <span class=\"icon-user\" />}\n                <label class=\"custom__file__upload\">\n                    <input type=\"file\" accept=\"*/image\" onChange={(event: Event) => { this.fileHandler(event, 'photo') }} />\n                    <span class=\"btn btn__danger btn__xs\">Select a Photo</span>\n                </label>\n            </div>\n            <form action=\"#\" method=\"POST\" novalidate onSubmit={this.formSubmit}>\n                <div class=\"form__group\">\n                    <label for=\"name\">Name</label>\n                    <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Fullname\" v-model={this.formData.name} />\n                </div>\n                <div class=\"form__group\">\n                    <label for=\"address\">Address</label>\n                    <input type=\"text\" name=\"address\" id=\"address\" placeholder=\"Address\" v-model={this.formData.address} />\n                </div>\n                <div class=\"form__group\">\n                    <label for=\"phone\">Phone</label>\n                    <input type=\"text\" name=\"phone\" id=\"phone\" placeholder=\"Phone\" v-model={this.formData.phone} />\n                </div>\n                <div class=\"form__group\">\n                    <strong>Other Documents</strong>\n                    <div class=\"files\">\n                        <label class=\"custom__file__upload\">\n                            <input type=\"file\" accept=\"*/image\" onChange={(event: Event) => { this.fileHandler(event, 'citizenship_front') }} />\n                            {this.formData.citizenship_front && this.formData.citizenship_front.length > 0 ? <img src={this.formData.citizenship_front[0]} alt={this.formData.name} /> : <span class=\"text\">Upload citizenship front</span>}\n                        </label>\n                        <label class=\"custom__file__upload\">\n                            <input type=\"file\" accept=\"*/image\" onChange={(event: Event) => { this.fileHandler(event, 'citizenship_back') }} />\n                            {this.formData.citizenship_back && this.formData.citizenship_back.length > 0 ? <img src={this.formData.citizenship_back[0]} alt={this.formData.name} /> : <span class=\"text\">Upload citizenship back</span>}\n                        </label>\n                    </div>\n                </div>\n                <div class=\"btn__holder\">\n                    <button type=\"submit\" class=\"btn btn__primary\">\n                        {this.isSaving ? (<span class=\"icon-spinner loading\"></span>) : null}\n                        Save</button>\n                </div>\n            </form>\n        </div>)\n    }\n\n    /**\n     * for file uploading and conveting images to base64 format\n     * @param event \n     * @returns void\n     */\n    fileHandler(event: Event, field: string): void {\n        const element = event.target as HTMLInputElement\n        const fileList: FileList | null = element.files\n\n        if (fileList) {\n            const fileReader: FileReader = new FileReader()\n            const file = fileList[0]\n\n            if (file) {\n                fileReader.readAsDataURL(file)\n                fileReader.onload = () => {\n                    if (fileReader.result) {\n                        if (!this.formData[field])\n                            this.formData[field] = []\n\n                        this.formData[field][0] = (fileReader.result as string)\n                        this.$forceUpdate()\n                    }\n                }\n            }\n        }\n\n    }\n\n    formSubmit(event: HTMLFormElement): void {\n        event.preventDefault()\n        this.resetErrorMessage()\n\n        this.$nextTick(() => {\n            if (!this.hasError) {\n                this.isSaving = true\n\n                this.save(this.formData)\n                    .then(() => {\n                        this.$emit('close')\n                        this.resetErrorMessage()\n                    })\n                    .finally(() => {\n                        this.isSaving = false\n                    })\n            }\n        })\n    }\n}","import { VNode } from 'vue'\nimport { Component, Vue } from 'vue-property-decorator'\nimport { mapGetters } from 'vuex'\nimport moment from 'moment'\n\nimport { iUserDetail } from '@/interfaces/auth'\nimport EmailVerify from '@/components/account/verify'\nimport ProfileForm from '@/components/account/ProfileForm'\nimport Modal from '@/components/common/Modal'\n\n@Component({\n    computed: {\n        ...mapGetters({\n            userDetail: 'root/getLoggedinUser'\n        })\n    }\n})\nexport default class AccountInfo extends Vue {\n    private userDetail!: iUserDetail\n    private showProfieForm: boolean = false\n\n    get hasCitizenship(): boolean {\n        return Boolean(this.userDetail.citizenship_front || this.userDetail.citizenship_back)\n    }\n\n    /**\n     * @returns VNode\n     */\n    render(): VNode {\n        return (<main id=\"main\">\n            <section class=\"item__section\">\n                {!this.userDetail.email_verified_at ? <EmailVerify /> : null}\n                <header class=\"item__section__heading\">\n                    <h2 class=\"h3\">{this.userDetail.name}</h2>\n                    <a href=\"#\" class=\"text--primary\" onClick={(event: MouseEvent) => {\n                        event.preventDefault()\n                        this.showProfieForm = true\n                    }}>edit</a>\n                </header>\n                <div class=\"user__image\">\n                    {this.userDetail.photo ? <img src={this.userDetail.photo_url} alt={this.userDetail.name} /> : <span class=\"icon-user\" />}\n                </div>\n                <dl class=\"user__detail\">\n                    <dt>Email</dt>\n                    <dd>{this.userDetail.email}</dd>\n                    <dt>Address</dt>\n                    <dd>{this.userDetail.address}</dd>\n                    <dt>Phone</dt>\n                    <dd>{this.userDetail.phone}</dd>\n                    <dt>Email Verification</dt>\n                    <dd><span class={{ 'verified': this.userDetail.email_verified_at }}>{this.userDetail.email_verified_at ? \"verified\" : \"not verified\"}</span></dd>\n                    <dt>Date of Join</dt>\n                    <dd><time datetime={moment(this.userDetail.created_at).local().format('YYYY-MM-DD HH:mm:ss')}>{moment(this.userDetail.created_at).local().format('Do [of] MMMM [in] YYYY')}</time></dd>\n                    {this.hasCitizenship ? [<dt>Documents</dt>,\n                    <dd>\n                        <strong>Citizenship</strong>\n                        <div class=\"image__list\">\n                            {this.userDetail.citizenship_front ? (<div class=\"image__holder\">\n                                <img src={this.userDetail.citizenship_front_url} alt={this.userDetail.name + \"_citizenship_front\"} />\n                            </div>) : null}\n                            {this.userDetail.citizenship_back ? (<div class=\"image__holder\">\n                                <img src={this.userDetail.citizenship_back_url} alt={this.userDetail.name + \"_citizenship_back\"} />\n                            </div>) : null}\n                        </div>\n                    </dd>] : null}\n                </dl>\n            </section>\n            <Modal v-model={this.showProfieForm}>\n                <ProfileForm onClose={() => this.showProfieForm = false} />\n            </Modal>\n        </main>)\n    }\n}\n"],"sourceRoot":""}