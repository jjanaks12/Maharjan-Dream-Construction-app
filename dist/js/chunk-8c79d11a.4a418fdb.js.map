{"version":3,"sources":["webpack:///./src/components/common/Modal.tsx","webpack:///./src/core/FormComponent.tsx","webpack:///./src/pages/rent/Detail.tsx","webpack:///./src/interfaces/appointment.ts","webpack:///./src/components/realstate/Appointment.tsx"],"names":["Modal","props","this","value","document","body","style","overflow","event","preventDefault","$emit","stopPropagation","$scopedSlots","header","title","$slots","default","required","FormComponent","Object","keys","errors","reduce","acc","key","length","message","field","forEach","RentDetail","isLoading","showAvailabilityModal","appointment","rent","name","description","excerpt","machinery","price","checkRoute","status","RENT","id","$route","params","getRent","checkAppointment","type","deep","methods","AppointmentStatus","AppointmentType","Appointment","saving","formData","REALSTATE","user_id","date","updateUserID","rent_id","realstate_id","minDate","add","format","maxDate","formSubmit","then","result","$nextTick","hasError","requestAppointment","data","errorList","user","computed"],"mappings":"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","file":"js/chunk-8c79d11a.4a418fdb.js","sourcesContent":["import { VNode } from \"vue\"\r\nimport { Component, Prop, Vue, Watch } from \"vue-property-decorator\"\r\n\r\n@Component\r\nexport default class Modal extends Vue {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n\r\n    @Prop({ required: true }) value!: boolean\r\n    @Prop({ default: null }) title!: string | null\r\n\r\n    @Watch('value')\r\n    valueChanged() {\r\n        if (this.value)\r\n            document.body.style.overflow = 'hidden'\r\n        else\r\n            document.body.style.overflow = ''\r\n    }\r\n\r\n    render(): VNode {\r\n        return <div class={{ \"modal\": true, \"modal--active\": this.value }} onClick={(event: MouseEvent) => {\r\n            event.preventDefault()\r\n            this.$emit('input', false)\r\n        }}>\r\n            <div class=\"modal__holder\" onClick={(event: MouseEvent) => {\r\n                event.stopPropagation()\r\n            }}>\r\n                {this.$scopedSlots.header\r\n                    ? <header class=\"modal__header\">\r\n                        {this.$scopedSlots.header({})}\r\n                    </header>\r\n                    : this.title\r\n                        ? <header class=\"modal__header\">\r\n                            <h2>{this.title}</h2>\r\n                        </header>\r\n                        : null}\r\n                <div class=\"modal__body\">\r\n                    {this.$slots.default}\r\n                </div>\r\n                <footer class=\"modal__footer\">\r\n                    <button class=\"btn btn__default btn__xs\" onClick={(event: MouseEvent) => {\r\n                        event.preventDefault()\r\n                        this.$emit('input', false)\r\n                    }}>close</button>\r\n                </footer>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import { iErrorMessage } from '@/interfaces/auth'\r\nimport { Component, Vue } from 'vue-property-decorator'\r\n\r\n// let timer: any\r\n@Component\r\nexport default class FormComponent extends Vue {\r\n    protected errors!: iErrorMessage\r\n\r\n    // @Watch('errors', { deep: true })\r\n    // errorWatcher() {\r\n    //     if (timer)\r\n    //         return\r\n\r\n    //     timer = setTimeout(() => {\r\n    //         this.resetErrorMessage()\r\n    //     }, 7000)\r\n    // }\r\n\r\n    /**\r\n    * Checks if there are any errors\r\n    * \r\n    * @returns boolean\r\n    */\r\n    get hasError(): boolean {\r\n        return Object.keys(this.errors).reduce((acc: boolean, key: string): boolean => {\r\n            return acc || this.errors[key].length > 0\r\n        }, false)\r\n    }\r\n\r\n    get errorMessage(): string {\r\n        let message: string = ''\r\n\r\n        for (const field in this.errors) {\r\n            if (this.errors[field].length > 0) {\r\n                message = this.errors[field][0]\r\n                return message\r\n            }\r\n        }\r\n        return message\r\n    }\r\n\r\n    protected resetErrorMessage(): void {\r\n\r\n        Object.keys(this.errors).forEach((key: string) => {\r\n            this.errors[key] = []\r\n        })\r\n    }\r\n}\r\n","import { VNode } from 'vue'\r\nimport { Component, Vue, Watch } from 'vue-property-decorator'\r\nimport { mapActions } from 'vuex'\r\n\r\nimport { iRent } from '@/interfaces/app'\r\nimport { appointment, AppointmentType } from '@/interfaces/appointment'\r\n\r\nimport Modal from '@/components/common/Modal'\r\nimport Appointment from '@/components/realstate/Appointment'\r\n\r\n@Component({\r\n    methods: {\r\n        ...mapActions({\r\n            getRent: 'rent/getRent',\r\n            checkAppointment: 'appointment/checkAppointment',\r\n        })\r\n    }\r\n})\r\nexport default class RentDetail extends Vue {\r\n    private isLoading: boolean = false\r\n    private showAvailabilityModal: boolean = false\r\n\r\n    private getRent!: (id: string) => iRent\r\n    private checkAppointment!: (payload: { type: string, id: string }) => any\r\n    private appointment: appointment | null = null\r\n\r\n    private rent: iRent = {\r\n        name: '',\r\n        description: '',\r\n        excerpt: '',\r\n        machinery: '',\r\n        price: ''\r\n    }\r\n\r\n    @Watch('$route', { deep: true })\r\n    routeWatcher() {\r\n        this.checkRoute()\r\n    }\r\n\r\n    mounted() {\r\n        this.checkRoute()\r\n    }\r\n\r\n    render(): VNode {\r\n        return (<main id=\"main\">\r\n            <section class=\"item__section\">\r\n                {!this.isLoading\r\n                    ? <div class=\"item__detail\">\r\n                        {this.appointment && Object.keys(this.appointment).length > 0\r\n                            ? <div class=\"meta__info\">\r\n                                <p>Your appointment for this propperty has <span class=\"text--primary\">{this.appointment.status}</span> status. You will soon get updates</p>\r\n                            </div>\r\n                            : <div class=\"text--right mb-4\">\r\n                                <a href=\"#\" class=\"btn btn__xs btn__primary\" onClick={(event: MouseEvent) => {\r\n                                    event.preventDefault()\r\n                                    this.showAvailabilityModal = true\r\n                                }}>Request Appointment</a>\r\n                            </div>}\r\n                        <div class=\"item__detail__description\">\r\n                            <h2 class=\"title\">{this.rent.name}</h2>\r\n                            <div class=\"holder\">\r\n                                <em class=\"price\">Rs.{this.rent.price}</em>\r\n                                <strong class=\"sub__heading\">{this.rent.machinery}</strong>\r\n                            </div>\r\n                            <div class=\"text__holder\" domPropsInnerHTML={this.rent.description} />\r\n                        </div>\r\n                    </div>\r\n                    : null\r\n                }\r\n                <Modal v-model={this.showAvailabilityModal}>\r\n                    <Appointment type={AppointmentType.RENT} onClose={() => { this.showAvailabilityModal = false }} />\r\n                </Modal>\r\n            </section>\r\n        </main>)\r\n    }\r\n\r\n    async checkRoute() {\r\n        this.isLoading = true\r\n        const id = this.$route?.params?.id\r\n\r\n        this.rent = await this.getRent(id)\r\n        this.appointment = await this.checkAppointment({ type: AppointmentType.RENT, id })\r\n\r\n        this.isLoading = false\r\n    }\r\n}\r\n","import { iUserDetail } from './auth'\r\n\r\nexport enum AppointmentStatus {\r\n    REQUESTED = 'requested',\r\n    ACCEPTED = 'accepted',\r\n    REJECTED = 'rejected',\r\n    // DELAYED = 'delayed',\r\n}\r\n\r\nexport interface appointment {\r\n    id?: string\r\n    user_id: string\r\n    realstate_id?: string\r\n    rent_id?: string\r\n    status?: AppointmentStatus\r\n    user?: iUserDetail\r\n    type: AppointmentType\r\n    date: string\r\n}\r\n\r\nexport enum AppointmentType {\r\n    REALSTATE = 'realstate',\r\n    RENT = 'rent'\r\n}","import { VNode } from 'vue'\r\nimport { Component, Prop, Watch } from \"vue-property-decorator\"\r\nimport { mapActions, mapGetters } from 'vuex'\r\n\r\nimport FormComponent from '@/core/FormComponent'\r\nimport { iErrorMessage, iUserDetail } from '@/interfaces/auth'\r\nimport { validate } from 'vee-validate'\r\nimport { appointment, AppointmentType } from '@/interfaces/appointment'\r\nimport moment from 'moment'\r\n\r\n@Component({\r\n    computed: {\r\n        ...mapGetters({\r\n            errorList: 'root/getErrorMessage',\r\n            user: 'root/getLoggedinUser'\r\n        })\r\n    },\r\n    methods: {\r\n        ...mapActions({\r\n            requestAppointment: 'appointment/requestAppointment'\r\n        })\r\n    }\r\n})\r\nexport default class Appointment extends FormComponent {\r\n    private user!: iUserDetail\r\n    private saving: boolean = false\r\n    private errorList?: iErrorMessage\r\n    private requestAppointment!: (formData: appointment) => Promise<boolean>\r\n    private formData: appointment = {\r\n        type: AppointmentType.REALSTATE,\r\n        user_id: '',\r\n        date: ''\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n\r\n        this.errors = {\r\n            date: []\r\n        }\r\n    }\r\n\r\n    @Prop({ default: AppointmentType.REALSTATE }) type!: AppointmentType\r\n\r\n    @Watch('user', { deep: true })\r\n    userChanged() {\r\n        this.updateUserID()\r\n    }\r\n\r\n    mounted() {\r\n        this.updateUserID()\r\n\r\n        this.formData.type = this.type\r\n\r\n        if (this.type == AppointmentType.RENT)\r\n            this.formData.rent_id = this.$route.params.id\r\n        else\r\n            this.formData.realstate_id = this.$route.params.id\r\n    }\r\n\r\n    render(): VNode {\r\n        const minDate: string = moment().add(1, 'day').format('YYYY-MM-DD') + 'T00:00'\r\n        const maxDate: string = moment().add(1, 'month').format('YYYY-MM-DD') + 'T00:00'\r\n\r\n        return <div class=\"appointment\">\r\n            <h2>Get an appointment</h2>\r\n            <p>You can choose a date to vist for Property</p>\r\n            <form action=\"#\" novalidate onSubmit={this.formSubmit}>\r\n                <div class={{ 'form__group': true, 'input--invalid': this.errors.date.length > 0 }}>\r\n                    <label for=\"date\">Choose a date</label>\r\n                    <input type=\"datetime-local\" name=\"date\" id=\"date\" placeholder=\"Choose a date\" max={maxDate} min={minDate} v-model={this.formData.date} />\r\n                    {this.errors.date.length > 0 ? (<span class=\"input__text\">{this.errors.date[0]}</span>) : null}\r\n                </div>\r\n                <div className=\"btn__holder text--right\">\r\n                    <button class=\"btn btn__primary\">Request</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n    async formSubmit(event: HTMLFormElement) {\r\n        event.preventDefault()\r\n\r\n        await validate(this.formData.date, 'required', { name: 'date' })\r\n            .then(result => {\r\n                this.errors['date'] = result.errors\r\n            })\r\n\r\n        this.$nextTick(async () => {\r\n            if (!this.hasError) {\r\n                this.saving = true\r\n\r\n                try {\r\n                    const data = await this.requestAppointment(this.formData)\r\n\r\n                    if (data) {\r\n                        this.$emit('close')\r\n                    } else {\r\n                        this.errors = { ...this.errors, ...this.errorList }\r\n                    }\r\n\r\n                } finally {\r\n                    this.saving = false\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    updateUserID() {\r\n        if (this.user.id)\r\n            this.formData.user_id = this.user.id\r\n    }\r\n}"],"sourceRoot":""}